# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with: 
          path: ~/.gradle
          key: gradle-dependencies-${{ hashFiles('build.gradle') }}
          restore-keys: |
            v1-dependencies-${{ hashFiles('build.gradle') }}
            v1-dependencies-
            v1-
      # Runs tests
      - name: Run Unit Tests
        run: ./gradlew test
      # Slack Notification with Library
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@@v2.2.0
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Test Result: ${{ job.status }}"
          SLACK_TITLE: Test Result
          SLACK_USERNAME: AutoTest Bot